services:
  api:
    build: 
      context: .
      dockerfile: ./Dockerfile
    container_name: logistics-api
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - rabbitmq
      - postgres
    env_file:
      - .env/api.env
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:latest
    container_name: logistics-kafka
    ports:
      - "9092:9092"
    env_file:
      - .env/kafka.env
    depends_on:
      - zookeeper
    restart: unless-stopped
    volumes:
      - kafka_data:/bitnami/kafka

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: logistics-zookeeper
    ports:
      - "2181:2181"
    env_file:
      - .env/zookeeper.env
    restart: unless-stopped
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  rabbitmq:
    image: rabbitmq:3-management
    container_name: logistics-rabbitmq
    ports:
      - "5672:5672"
    env_file:
      - .env/rabbitmq.env
    restart: unless-stopped
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  postgres:
    image: postgres:14
    container_name: logistics-postgres
    ports:
      - "5432:5432"
    env_file:
      - .env/postgres.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data:
  kafka_data:
  zookeeper_data:
  rabbitmq_data: